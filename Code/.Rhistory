metrics_g = model_f_rg(type=0,mode="incremental", Runs=20, K=7, Test=7)
#time series (G/R Windows)
model_f_rg = function(type=1,mode="incremental", Runs=20, K=7, Test=7){
if(type==1){
TS=df$BUD
} else {
TS=df$STELLA
}
S=K
L=length(TS) # 730
W=(L-Test)-(Runs-1)*S
ev=vector(length = Runs)
ev2=vector(length = Runs)
timelags=c(1,7,8)
DS=CasesSeries(TS,timelags)
W2=W-max(timelags)
SR=diff(range(TS))
for(b in 1:Runs)
{
H=holdout(TS,ratio=Test,mode=mode,iter=b,window=W,increment=S)
trinit=H$tr[1]
dtr=ts(TS[H$tr],frequency=K)
M=suppressWarnings(HoltWinters(dtr))
Pred=forecast(M,h=length(H$ts))$mean[1:Test]
ev[b]=mmetric(y=TS[H$ts],x=Pred,metric="MSE")
H2=holdout(DS$y,ratio=Test,mode=mode,iter=b,window=W2,increment=S)
M2=fit(y~.,DS[H2$tr,],model="mlpe")
Pred2=lforecast(M2,D,start=(length(H2$tr)+1),Test)
ev2[b]=mmetric(y=TS[H$ts],x=Pred2,metric="MSE")
#cat("iter:",b,"TR from:",trinit,"to:",(trinit+length(H$tr)-1),"size:",length(H$tr),
#    "TS from:",H$ts[1],"to:",H$ts[length(H$ts)],"size:",length(H$ts),
#    "nmae:",ev[b],",",ev2[b],"\n")
mgraph(TS[H$ts],Pred,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HW pred.","mlpe")))
lines(Pred2,pch=19,cex=0.5,type="b",col="red")
}
return(list(ev=ev, ev2=ev2))
}
metrics_g = model_f_rg(type=0,mode="incremental", Runs=20, K=7, Test=7)
#time series (G/R Windows)
model_f_rg = function(type=1,mode="incremental", Runs=20, K=7, Test=7){
if(type==1){
TS=df$BUD
} else {
TS=df$STELLA
}
S=K
L=length(TS) # 730
W=(L-Test)-(Runs-1)*S
ev=vector(length = Runs)
ev2=vector(length = Runs)
timelags=c(1,7,8)
DS=CasesSeries(TS,timelags)
W2=W-max(timelags)
SR=diff(range(TS))
for(b in 1:Runs)
{
print("Yes")
H=holdout(TS,ratio=Test,mode=mode,iter=b,window=W,increment=S)
trinit=H$tr[1]
dtr=ts(TS[H$tr],frequency=K)
M=suppressWarnings(HoltWinters(dtr))
Pred=forecast(M,h=length(H$ts))$mean[1:Test]
ev[b]=mmetric(y=TS[H$ts],x=Pred,metric="MSE")
H2=holdout(DS$y,ratio=Test,mode=mode,iter=b,window=W2,increment=S)
M2=fit(y~.,DS[H2$tr,],model="mlpe")
Pred2=lforecast(M2,D,start=(length(H2$tr)+1),Test)
ev2[b]=mmetric(y=TS[H$ts],x=Pred2,metric="MSE")
#cat("iter:",b,"TR from:",trinit,"to:",(trinit+length(H$tr)-1),"size:",length(H$tr),
#    "TS from:",H$ts[1],"to:",H$ts[length(H$ts)],"size:",length(H$ts),
#    "nmae:",ev[b],",",ev2[b],"\n")
mgraph(TS[H$ts],Pred,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HW pred.","mlpe")))
lines(Pred2,pch=19,cex=0.5,type="b",col="red")
}
return(list(ev=ev, ev2=ev2))
}
metrics_g = model_f_rg(type=0,mode="incremental", Runs=20, K=7, Test=7)
#time series (G/R Windows)
model_f_rg = function(type=1,mode="incremental", Runs=20, K=7, Test=7){
if(type==1){
TS=df$BUD
} else {
TS=df$STELLA
}
S=K
L=length(TS) # 730
W=(L-Test)-(Runs-1)*S
ev=vector(length = Runs)
ev2=vector(length = Runs)
timelags=c(1,7,8)
DS=CasesSeries(TS,timelags)
W2=W-max(timelags)
SR=diff(range(TS))
for(b in 1:Runs)
{
H=holdout(TS,ratio=Test,mode=mode,iter=b,window=W,increment=S)
trinit=H$tr[1]
dtr=ts(TS[H$tr],frequency=K)
M=suppressWarnings(HoltWinters(dtr))
Pred=forecast(M,h=length(H$ts))$mean[1:Test]
ev[b]=mmetric(y=TS[H$ts],x=Pred,metric="MSE")
H2=holdout(DS$y,ratio=Test,mode=mode,iter=b,window=W2,increment=S)
print("Yes")
M2=fit(y~.,DS[H2$tr,],model="mlpe")
Pred2=lforecast(M2,D,start=(length(H2$tr)+1),Test)
ev2[b]=mmetric(y=TS[H$ts],x=Pred2,metric="MSE")
#cat("iter:",b,"TR from:",trinit,"to:",(trinit+length(H$tr)-1),"size:",length(H$tr),
#    "TS from:",H$ts[1],"to:",H$ts[length(H$ts)],"size:",length(H$ts),
#    "nmae:",ev[b],",",ev2[b],"\n")
mgraph(TS[H$ts],Pred,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HW pred.","mlpe")))
lines(Pred2,pch=19,cex=0.5,type="b",col="red")
}
return(list(ev=ev, ev2=ev2))
}
metrics_g = model_f_rg(type=0,mode="incremental", Runs=20, K=7, Test=7)
#time series (G/R Windows)
model_f_rg = function(type=1,mode="incremental", Runs=20, K=7, Test=7){
if(type==1){
TS=df$BUD
} else {
TS=df$STELLA
}
S=K
L=length(TS) # 730
W=(L-Test)-(Runs-1)*S
ev=vector(length = Runs)
ev2=vector(length = Runs)
timelags=c(1,7,8)
DS=CasesSeries(TS,timelags)
W2=W-max(timelags)
SR=diff(range(TS))
for(b in 1:Runs)
{
H=holdout(TS,ratio=Test,mode=mode,iter=b,window=W,increment=S)
trinit=H$tr[1]
dtr=ts(TS[H$tr],frequency=K)
M=suppressWarnings(HoltWinters(dtr))
Pred=forecast(M,h=length(H$ts))$mean[1:Test]
ev[b]=mmetric(y=TS[H$ts],x=Pred,metric="MSE")
H2=holdout(DS$y,ratio=Test,mode=mode,iter=b,window=W2,increment=S)
M2=fit(y~.,DS[H2$tr,],model="mlpe")
Pred2=lforecast(M2,D,start=(length(H2$tr)+1),Test)
ev2[b]=mmetric(y=TS[H$ts],x=Pred2,metric="MSE")
print("Yes")
#cat("iter:",b,"TR from:",trinit,"to:",(trinit+length(H$tr)-1),"size:",length(H$tr),
#    "TS from:",H$ts[1],"to:",H$ts[length(H$ts)],"size:",length(H$ts),
#    "nmae:",ev[b],",",ev2[b],"\n")
mgraph(TS[H$ts],Pred,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HW pred.","mlpe")))
lines(Pred2,pch=19,cex=0.5,type="b",col="red")
}
return(list(ev=ev, ev2=ev2))
}
metrics_g = model_f_rg(type=0,mode="incremental", Runs=20, K=7, Test=7)
#time series (G/R Windows)
model_f_rg = function(type=1,mode="incremental", Runs=20, K=7, Test=7){
if(type==1){
TS=df$BUD
} else {
TS=df$STELLA
}
S=K
L=length(TS) # 730
W=(L-Test)-(Runs-1)*S
ev=vector(length = Runs)
ev2=vector(length = Runs)
timelags=c(1,7,8)
DS=CasesSeries(TS,timelags)
W2=W-max(timelags)
SR=diff(range(TS))
for(b in 1:Runs)
{
H=holdout(TS,ratio=Test,mode=mode,iter=b,window=W,increment=S)
trinit=H$tr[1]
dtr=ts(TS[H$tr],frequency=K)
M=suppressWarnings(HoltWinters(dtr))
Pred=forecast(M,h=length(H$ts))$mean[1:Test]
ev[b]=mmetric(y=TS[H$ts],x=Pred,metric="MSE")
H2=holdout(DS$y,ratio=Test,mode=mode,iter=b,window=W2,increment=S)
print("Yes")
M2=fit(y~.,DS[H2$tr,],model="mlpe")
Pred2=lforecast(M2,D,start=(length(H2$tr)+1),Test)
ev2[b]=mmetric(y=TS[H$ts],x=Pred2,metric="MSE")
#cat("iter:",b,"TR from:",trinit,"to:",(trinit+length(H$tr)-1),"size:",length(H$tr),
#    "TS from:",H$ts[1],"to:",H$ts[length(H$ts)],"size:",length(H$ts),
#    "nmae:",ev[b],",",ev2[b],"\n")
mgraph(TS[H$ts],Pred,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HW pred.","mlpe")))
lines(Pred2,pch=19,cex=0.5,type="b",col="red")
}
return(list(ev=ev, ev2=ev2))
}
metrics_g = model_f_rg(type=0,mode="incremental", Runs=20, K=7, Test=7)
#time series (G/R Windows)
model_f_rg = function(type=1,mode="incremental", Runs=20, K=7, Test=7){
if(type==1){
TS=df$BUD
} else {
TS=df$STELLA
}
S=K
L=length(TS) # 730
W=(L-Test)-(Runs-1)*S
ev=vector(length = Runs)
ev2=vector(length = Runs)
timelags=c(1,7,8)
DS=CasesSeries(TS,timelags)
W2=W-max(timelags)
SR=diff(range(TS))
for(b in 1:Runs)
{
H=holdout(TS,ratio=Test,mode=mode,iter=b,window=W,increment=S)
trinit=H$tr[1]
dtr=ts(TS[H$tr],frequency=K)
M=suppressWarnings(HoltWinters(dtr))
Pred=forecast(M,h=length(H$ts))$mean[1:Test]
ev[b]=mmetric(y=TS[H$ts],x=Pred,metric="MSE")
H2=holdout(DS$y,ratio=Test,mode=mode,iter=b,window=W2,increment=S)
M2=fit(y~.,DS[H2$tr,],model="mlpe")
print("Yes")
Pred2=lforecast(M2,D,start=(length(H2$tr)+1),Test)
ev2[b]=mmetric(y=TS[H$ts],x=Pred2,metric="MSE")
#cat("iter:",b,"TR from:",trinit,"to:",(trinit+length(H$tr)-1),"size:",length(H$tr),
#    "TS from:",H$ts[1],"to:",H$ts[length(H$ts)],"size:",length(H$ts),
#    "nmae:",ev[b],",",ev2[b],"\n")
mgraph(TS[H$ts],Pred,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HW pred.","mlpe")))
lines(Pred2,pch=19,cex=0.5,type="b",col="red")
}
return(list(ev=ev, ev2=ev2))
}
metrics_g = model_f_rg(type=0,mode="incremental", Runs=20, K=7, Test=7)
#time series (G/R Windows)
model_f_rg = function(type=1,mode="incremental", Runs=20, K=7, Test=7){
if(type==1){
TS=df$BUD
} else {
TS=df$STELLA
}
S=K
L=length(TS) # 730
W=(L-Test)-(Runs-1)*S
ev=vector(length = Runs)
ev2=vector(length = Runs)
timelags=c(1,7,8)
DS=CasesSeries(TS,timelags)
W2=W-max(timelags)
SR=diff(range(TS))
for(b in 1:Runs)
{
H=holdout(TS,ratio=Test,mode=mode,iter=b,window=W,increment=S)
trinit=H$tr[1]
dtr=ts(TS[H$tr],frequency=K)
M=suppressWarnings(HoltWinters(dtr))
Pred=forecast(M,h=length(H$ts))$mean[1:Test]
ev[b]=mmetric(y=TS[H$ts],x=Pred,metric="MSE")
H2=holdout(DS$y,ratio=Test,mode=mode,iter=b,window=W2,increment=S)
M2=fit(y~.,DS[H2$tr,],model="mlpe")
Pred2=lforecast(M2,D,start=(length(H2$tr)+1),Test)
print("Yes")
ev2[b]=mmetric(y=TS[H$ts],x=Pred2,metric="MSE")
#cat("iter:",b,"TR from:",trinit,"to:",(trinit+length(H$tr)-1),"size:",length(H$tr),
#    "TS from:",H$ts[1],"to:",H$ts[length(H$ts)],"size:",length(H$ts),
#    "nmae:",ev[b],",",ev2[b],"\n")
mgraph(TS[H$ts],Pred,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HW pred.","mlpe")))
lines(Pred2,pch=19,cex=0.5,type="b",col="red")
}
return(list(ev=ev, ev2=ev2))
}
metrics_g = model_f_rg(type=0,mode="incremental", Runs=20, K=7, Test=7)
model_f_rg = function(type=1,mode="incremental", Runs=20, K=7, Test=7){
if(type==1){
TS=df$BUD
} else {
TS=df$STELLA
}
S=K
L=length(TS) # 730
W=(L-Test)-(Runs-1)*S
ev=vector(length = Runs)
ev2=vector(length = Runs)
timelags=c(1,7,8)
DS=CasesSeries(TS,timelags)
W2=W-max(timelags)
SR=diff(range(TS))
for(b in 1:Runs)
{
H=holdout(TS,ratio=Test,mode=mode,iter=b,window=W,increment=S)
trinit=H$tr[1]
dtr=ts(TS[H$tr],frequency=K)
M=suppressWarnings(HoltWinters(dtr))
Pred=forecast(M,h=length(H$ts))$mean[1:Test]
ev[b]=mmetric(y=TS[H$ts],x=Pred,metric="MSE")
H2=holdout(DS$y,ratio=Test,mode=mode,iter=b,window=W2,increment=S)
M2=fit(y~.,DS[H2$tr,],model="mlpe")
Pred2=lforecast(M2,DS,start=(length(H2$tr)+1),Test)
print("Yes")
ev2[b]=mmetric(y=TS[H$ts],x=Pred2,metric="MSE")
#cat("iter:",b,"TR from:",trinit,"to:",(trinit+length(H$tr)-1),"size:",length(H$tr),
#    "TS from:",H$ts[1],"to:",H$ts[length(H$ts)],"size:",length(H$ts),
#    "nmae:",ev[b],",",ev2[b],"\n")
mgraph(TS[H$ts],Pred,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HW pred.","mlpe")))
lines(Pred2,pch=19,cex=0.5,type="b",col="red")
}
return(list(ev=ev, ev2=ev2))
}
metrics_g = model_f_rg(type=0,mode="incremental", Runs=20, K=7, Test=7)
cat("Growing Window median NMAE values for HW and mlpe:\n")
cat("Holt-Winters",median(metrics_g$ev),"\n")
cat("mlpe",median(metrics_g$ev2),"\n")
cat("Growing Window median NMAE values for HW and mlpe:\n")
cat("Holt-Winters",median(metrics_r$ev),"\n")
cat("mlpe",median(metrics_r$ev2),"\n")
weekly_naive()
metrics_g
metrics_g$ev
weekly_naive()
ev_naive = weekly_naive()
mgraph(ev_naive,metrics_g$ev,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HW pred.","mlpe")))
lines(metrics_g$ev2,pch=19,cex=0.5,type="b",col="red")
mgraph(ev_naive,metrics_g$ev,metrics_g$ev2,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HW pred.","mlpe")))
mse_data = data.frame(Model = c("Naive", "HW", "NN"),
MSE = c(ev_naive, metrics_g$ev, metrics_g$ev2))
# Plot the MSE values
plot(mse_data$Model, mse_data$MSE, type = "o", xlab = "Model", ylab = "MSE",
main = "Comparison of MSE for three models")
any(is.na(mse_data))
edit(mse_data)
mse_data = data.frame(naive = ev_naive,
hw = metrics_g$ev,
nn = metrics_g$ev2)
# Plot the MSE values
plot(mse_data$Model, mse_data$MSE, type = "o", xlab = "Model", ylab = "MSE",
main = "Comparison of MSE for three models")
edit(mse_data)
plot(mse_data)
mgraph(ev_naive,metrics_g$ev,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HW pred.","mlpe")))
lines(metrics_g$ev2,pch=19,cex=0.5,type="b",col="red")
mgraph(ev_naive,metrics_g$ev,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("weekly_naive","HW pred.","mlpe")))
lines(metrics_g$ev2,pch=19,cex=0.5,type="b",col="red")
source("Split.R")
weekly_naive(mse = metrics_g)
source("Split.R")
weekly_naive(mse = metrics_g)
## Rolling and Growing window
type=1
metrics_g = model_f_rg(type,mode="incremental", Runs=20, K=7, Test=7)
weekly_naive(type, mse = metrics_g)
source("Split.R")
metrics_g = model_f_rg(type,mode="incremental", Runs=20, K=7, Test=7)
weekly_naive(type, mse = metrics_g)
model_f_rg = function(type=1,mode="incremental", Runs=20, K=7, Test=7){
if(type==1){
TS=df$BUD
} else {
TS=df$STELLA
}
S=K
L=length(TS) # 730
W=(L-Test)-(Runs-1)*S
ev=vector(length = Runs)
ev2=vector(length = Runs)
timelags=1:7
DS=CasesSeries(TS,timelags)
W2=W-max(timelags)
for(b in 1:Runs)
{
H=holdout(TS,ratio=Test,mode=mode,iter=b,window=W,increment=S)
trinit=H$tr[1]
dtr=ts(TS[H$tr],frequency=K)
Pred=f_models$HW(x = dtr, h = Test)
ev[b]=mmetric(y=TS[H$ts],x=Pred,metric="MSE")
H2=holdout(DS$y,ratio=Test,mode=mode,iter=b,window=W2,increment=S)
Pred =ml_models$mlpe(S = DS, init = (length(H2$tr)+1), Test)
ev2[b]=mmetric(y=TS[H$ts],x=Pred2,metric="MSE")
#cat("iter:",b,"TR from:",trinit,"to:",(trinit+length(H$tr)-1),"size:",length(H$tr),
#    "TS from:",H$ts[1],"to:",H$ts[length(H$ts)],"size:",length(H$ts),
#    "nmae:",ev[b],",",ev2[b],"\n")
mgraph(TS[H$ts],Pred,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HW pred.","mlpe")))
lines(Pred2,pch=19,cex=0.5,type="b",col="red")
}
return(list(ev=ev, ev2=ev2))
}
model_f_rg()
model_f_rg = function(type=1,mode="incremental", Runs=20, K=7, Test=7){
if(type==1){
TS=df$BUD
} else {
TS=df$STELLA
}
S=K
L=length(TS) # 730
W=(L-Test)-(Runs-1)*S
ev=vector(length = Runs)
ev2=vector(length = Runs)
timelags=1:7
DS=CasesSeries(TS,timelags)
W2=W-max(timelags)
for(b in 1:Runs)
{
H=holdout(TS,ratio=Test,mode=mode,iter=b,window=W,increment=S)
trinit=H$tr[1]
dtr=ts(TS[H$tr],frequency=K)
Pred=f_models$HW(x = dtr, h = Test)
ev[b]=mmetric(y=TS[H$ts],x=Pred,metric="MSE")
H2=holdout(DS$y,ratio=Test,mode=mode,iter=b,window=W2,increment=S)
Pred =ml_models$mlpe(S = DS, init = (length(H2$tr)+1), NP=Test)
ev2[b]=mmetric(y=TS[H$ts],x=Pred2,metric="MSE")
#cat("iter:",b,"TR from:",trinit,"to:",(trinit+length(H$tr)-1),"size:",length(H$tr),
#    "TS from:",H$ts[1],"to:",H$ts[length(H$ts)],"size:",length(H$ts),
#    "nmae:",ev[b],",",ev2[b],"\n")
mgraph(TS[H$ts],Pred,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HW pred.","mlpe")))
lines(Pred2,pch=19,cex=0.5,type="b",col="red")
}
return(list(ev=ev, ev2=ev2))
}
model_f_rg()
model_f_rg = function(type=1,mode="incremental", Runs=20, K=7, Test=7){
if(type==1){
TS=df$BUD
} else {
TS=df$STELLA
}
S=K
L=length(TS) # 730
W=(L-Test)-(Runs-1)*S
ev=vector(length = Runs)
ev2=vector(length = Runs)
timelags=1:7
DS=CasesSeries(TS,timelags)
W2=W-max(timelags)
for(b in 1:Runs)
{
H=holdout(TS,ratio=Test,mode=mode,iter=b,window=W,increment=S)
trinit=H$tr[1]
dtr=ts(TS[H$tr],frequency=K)
Pred=f_models$HW(x = dtr, h = Test)
ev[b]=mmetric(y=TS[H$ts],x=Pred,metric="MSE")
H2=holdout(DS$y,ratio=Test,mode=mode,iter=b,window=W2,increment=S)
Pred =ml_models$mlpe(S = DS,x= DS[H2$tr,], init = (length(H2$tr)+1), NP=Test)
ev2[b]=mmetric(y=TS[H$ts],x=Pred2,metric="MSE")
#cat("iter:",b,"TR from:",trinit,"to:",(trinit+length(H$tr)-1),"size:",length(H$tr),
#    "TS from:",H$ts[1],"to:",H$ts[length(H$ts)],"size:",length(H$ts),
#    "nmae:",ev[b],",",ev2[b],"\n")
mgraph(TS[H$ts],Pred,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HW pred.","mlpe")))
lines(Pred2,pch=19,cex=0.5,type="b",col="red")
}
return(list(ev=ev, ev2=ev2))
}
model_f_rg()
model_f_rg = function(type=1,mode="incremental", Runs=20, K=7, Test=7){
if(type==1){
TS=df$BUD
} else {
TS=df$STELLA
}
S=K
L=length(TS) # 730
W=(L-Test)-(Runs-1)*S
ev=vector(length = Runs)
ev2=vector(length = Runs)
timelags=1:7
DS=CasesSeries(TS,timelags)
W2=W-max(timelags)
for(b in 1:Runs)
{
H=holdout(TS,ratio=Test,mode=mode,iter=b,window=W,increment=S)
trinit=H$tr[1]
dtr=ts(TS[H$tr],frequency=K)
Pred=f_models$HW(x = dtr, h = Test)
ev[b]=mmetric(y=TS[H$ts],x=Pred,metric="MSE")
H2=holdout(DS$y,ratio=Test,mode=mode,iter=b,window=W2,increment=S)
Pred2 =ml_models$mlpe(S = DS,x= DS[H2$tr,], init = (length(H2$tr)+1), NP=Test)
ev2[b]=mmetric(y=TS[H$ts],x=Pred2,metric="MSE")
#cat("iter:",b,"TR from:",trinit,"to:",(trinit+length(H$tr)-1),"size:",length(H$tr),
#    "TS from:",H$ts[1],"to:",H$ts[length(H$ts)],"size:",length(H$ts),
#    "nmae:",ev[b],",",ev2[b],"\n")
mgraph(TS[H$ts],Pred,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HW pred.","mlpe")))
lines(Pred2,pch=19,cex=0.5,type="b",col="red")
}
return(list(ev=ev, ev2=ev2))
}
model_f_rg()
model_f_rg = function(type=1,mode="incremental", Runs=20, K=7, Test=7){
if(type==1){
TS=df$BUD
} else {
TS=df$STELLA
}
S=K
L=length(TS) # 730
W=(L-Test)-(Runs-1)*S
ev=vector(length = Runs)
ev2=vector(length = Runs)
timelags=1:7
DS=CasesSeries(TS,timelags)
W2=W-max(timelags)
for(b in 1:Runs)
{
H=holdout(TS,ratio=Test,mode=mode,iter=b,window=W,increment=S)
trinit=H$tr[1]
dtr=ts(TS[H$tr],frequency=K)
Pred=suppressWarnings(f_models$HW(x = dtr, h = Test))
ev[b]=mmetric(y=TS[H$ts],x=Pred,metric="MSE")
H2=holdout(DS$y,ratio=Test,mode=mode,iter=b,window=W2,increment=S)
Pred2 =ml_models$mlpe(S = DS,x= DS[H2$tr,], init = (length(H2$tr)+1), NP=Test)
ev2[b]=mmetric(y=TS[H$ts],x=Pred2,metric="MSE")
#cat("iter:",b,"TR from:",trinit,"to:",(trinit+length(H$tr)-1),"size:",length(H$tr),
#    "TS from:",H$ts[1],"to:",H$ts[length(H$ts)],"size:",length(H$ts),
#    "nmae:",ev[b],",",ev2[b],"\n")
mgraph(TS[H$ts],Pred,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HW pred.","mlpe")))
lines(Pred2,pch=19,cex=0.5,type="b",col="red")
}
return(list(ev=ev, ev2=ev2))
}
model_f_rg()
